{
  "title": "SC Yaml",
  "description": "Describe a fragment of a knowledge",
  "type": "object",
  "properties": {
    "type": {
      "title": "Template type",
      "description": "The type of scs template to be applied.",
      "anyOf": [
        {
          "const": "domain",
          "description": "Template describing a subject domain"
        },
        {
          "const": "concept",
          "description": "Template describing semantic neighbourhood of a relative concept (norole relation)"
        },
        {
          "const": "nrel",
          "description": "Template describing semantic neighbourhood of an absolute concept"
        }
      ]
    }
  },
  "if": {
    "properties": {
      "type": {
        "const": "domain"
      }
    }
  },
  "then": {
    "title": "Subject Domain",
    "properties": {
      "system": {
        "type": "string",
        "pattern": "^[a-z]+(_[a-z]+)*$",
        "description": "System idenfifier of the subject domain",
        "examples": ["subject_domains"]
      },
      "ru": {
        "type": "string",
        "pattern": "^[а-я]+( [а-я]+)*$",
        "description": "Russian idenfifier of the subject domain",
        "examples": ["предметных областей"]
      },
      "en": {
        "type": "string",
        "pattern": "^[A-Z][a-z]*( [A-Z][a-z]*)*$",
        "description": "English idenfifier of the subject domain",
        "examples": ["Subject Domains"]
      },
      "parent": {
        "type": "string",
        "pattern": "^[a-z]+(_[a-z]+)*$",
        "description": "Parent subject domain of the describing subject domain",
        "examples": ["domain_theory"]
      },
      "children": {
        "type": "string",
        "pattern": "^[a-z]+(_[a-z]+)*$",
        "description": "Child subject domain of the describing subject domain",
        "examples": [["atomic_subject_domain"]]
      },
      "max": {
        "type": "string",
        "pattern": "^[a-z]+(_[a-z]+)*$"
      },
      "concepts": {
        "type": "string",
        "pattern": "^[a-z]+(_[a-z]+)*$"
      },
      "rrels": {
        "type": "string",
        "pattern": "^[a-z]+(_[a-z]+)*$"
      },
      "nrels": {
        "type": "string",
        "pattern": "^[a-z]+(_[a-z]+)*$"
      }
    },
    "required": ["system", "ru", "en", "parent", "children"]
  },
  "else": {
    "allOf": [
      {
        "if": {
          "properties": { "type": { "anyOf": [{ "const": "concept" }, { "const": "nrel" }] } }
        },
        "then": {
          "properties": { "concept_nrel_both": { "type": "string" } },
          "required": ["concept_nrel_both"]
        }
      },
      {
        "if": {
          "properties": { "type": { "const": "concept" } }
        },
        "then": {
          "properties": { "concept_only": { "type": "string" } },
          "required": ["concept_only"]
        }
      },
      {
        "if": {
          "properties": { "type": { "const": "nrel" } }
        },
        "then": {
          "properties": { "nrel_only": { "type": "string" } },
          "required": ["nrel_only"]
        }
      }
    ]
  },
  "required": ["type"]
}
